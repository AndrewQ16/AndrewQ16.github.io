{"version":3,"sources":["Home/Home.js","Projects/Projects.js","Resume/Resume.js","AboutMe/AboutMe.js","Experience/Experience.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","image","class","id","href","src","width","height","alt","heigh","React","Component","Projects","Resume","target","this","AboutMe","Experience","text-center","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee2d1dd0.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n        this.image = \"images/pfp2.jpg\"\n    }\n\n    render(){\n        return (\n            // container requires a breakpoint for each screen width, add later if necessary\n            <div>\n                <div class=\"container\">\n                    <div class=\"row align-items-center\">\n                        {/* <div id=\"animation-fade-in-from-left\" class=\"col text-center left\">\n                        \n                            <img id=\"pfp\" class=\"shadow  mb-5\"\n                                src={this.image} \n                                alt=\"My picture didn't load :/\"/>\n                                        \n                        </div> */}\n                        <div id=\"animation-fade-in-from-right\" class=\"col text-center right\">\n                            \n                            <p class=\"h1\"><em>Hello there</em></p>\n                            \n                            <p>I'm Andrew and I'm a Software Developer.</p>\n                            <p>Feel free to have a look around!</p>\n\n\n                            {/* <ul class=\"list-inline\">\n                                <li class=\"list-inline-item\">Lorem ipsum</li>\n                                <li class=\"list-inline-item\">Phasellus iaculis</li>\n                                <li class=\"list-inline-item\">Nulla volutpat</li>\n                            </ul> */}\n                        </div>\n\n                        \n                    </div>\n                </div>\n\n                <div class=\"footer\">\n                    <a href=\"https://github.com/AndrewQ16\" id=\"right-space\">\n                        <img src=\"/images/github-logo.png\" width=\"40\" height=\"40\" alt=\"Github\"/>\n                    </a>\n                    \n                    <a href=\"https://www.linkedin.com/in/andrew-quinonez-801051b6/\">\n                        <img src=\"/images/linkedin.png\" width=\"40\" heigh=\"40\" alt=\"LinkedIn\"/>\n                    </a>\n                    \n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport './Projects.css';\nclass Projects extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        return (\n            <div>\n\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div  class=\"col-md text-left\" id=\"animation-fade-in-from-left\">\n                            <h4 id=\"element1\">Coffeeshop webapp</h4>\n                            <a id=\"element2\" href=\"https://github.com/AndrewQ16/CoffeeShop\">\n                                    <img src=\"images/github-logo.png\" alt=\"repo link\" width=\"20\" height=\"20\" />\n                            </a>\n                            <p>I created a <em>dummy</em> online store to order coffee and other\n                            breakfast items. This was a fullstack application where the front-end\n                            was created with Angular, the back-end was created with Springboot and the\n                            menu items were stored in a MySQL DB. The front-end is hosted on Firebase,\n                            back-end is hosted on Google Cloud Run in a Docker container and the DB\n                            hosted on Google SQL. You can view it <a href=\"https://coffeeshop-frontend.web.app/menu\">here. </a>\n                            There is a bit of styling lacking unfortunately :(</p>\n                        </div>\n                        <div class=\"col-md text-center\" id=\"animation-fade-in-from-right\">\n                            <h5><em>A *very* visually appealing coffeeshop</em></h5>\n                            <img src=\"images/coffeeshop.png\" alt=\"Coffeeshop site image\" width=\"650\" height=\"300\"/>\n\n                        </div>\n                    </div>\n\n                    <br></br>\n                    <div class=\"row \">\n                        <div class=\"col-md text-left\" id=\"animation-fade-in-from-left-delay-1\">\n                            <h4 id=\"element1\">Distributed Hashtable emulated on Android</h4>\n                            <a id=\"element2\" href=\"https://github.com/AndrewQ16/Pa3SimpleDHT\">\n                                    <img src=\"images/github-logo.png\" alt=\"repo link\" width=\"20\" height=\"20\" />\n                            </a>\n                            <p>In this project for my <em>Distributed Systems</em> course, we implemented\n                            a DHT to store <code>key:value</code> pairs. This algorithm we used was a<a href=\"https://en.wikipedia.org/wiki/Chord_(peer-to-peer)\"> chord ring </a> with 5 nodes that would be able to successfully store values even if a node\n                            was <em>lost</em> and be able to query and delete the stored values in this simulation.</p>\n                        </div>\n                        <div class=\"col text-center\" id=\"animation-fade-in-from-right-delay-1\">\n                            <h5><em>Chord ring concept</em></h5>\n                            <img src=\"images/Chord_network.png\" alt=\"Chord ring concept\"/>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div class=\"row \">\n                        <div class=\"col-md text-left\" id=\"animation-fade-in-from-left-delay-2\">\n                            <h4 id=\"element1\">Snake Game</h4>\n                            <a id=\"element2\" href=\"https://github.com/AndrewQ16/Snake-Game\">\n                                    <img src=\"images/github-logo.png\" alt=\"repo link\" width=\"20\" height=\"20\" />\n                            </a>\n                            <p>I recreated the Snake game with C++ using the SFML framework. Originally\n                            this project was to get comfortable with C++ since it's the language that\n                            was used in my Data Structures course. Can happily say it did help! :)</p>\n                        </div>\n                        <div class=\"col text-center\" id=\"animation-fade-in-from-right-delay-2\">\n                            <h5><em>Snake game</em></h5>\n                            <img src=\"images/snake.png\" width=\"400\" height=\"300\" alt=\"Snake game image\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default Projects;","import React from 'react';\nimport './Resume.css';\n\n/**\n * This page will give access to my resume to be downloaded\n */\nclass Resume extends React.Component {\n    constructor(props){\n        super(props);\n        this.image = \"/images/resume.png\";\n    }\n\n    render() {\n        return (\n            <div class=\"container\" id=\"resume-margin-top\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col text-center \">\n                        <h2>View my Resume</h2>\n                        <br></br>\n                        <a href=\"resume/resume.pdf\" target=\"_blank\">\n                            <img src={this.image} width=\"40\" height=\"40\" alt=\"Resume icon\"/>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Resume;","import React from 'react';\nimport './AboutMe.css';\n\nclass AboutMe extends React.Component {\n    constructor(props){\n        super(props)\n        this.image = \"images/pfp3.jpg\";\n    }\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col text-center\">\n                        <img id=\"pfp\" class=\"shadow  mb-5 animation-fade-in-from-top\"\n                            src={this.image} \n                            alt=\"My picture didn't load :/\"/>\n                    </div>\n                </div>\n\n                <div class=\"row align-items-center\">\n                    <div class=\"col text-center animation-fade-in-from-top\">\n\n                        <p>Hello there my name's Andrew and I'm a software developer who enjoys building\n                        full-stack, back-end and as a hobby, game apps. However without cornering\n                        myself into a developer corner, I would just say I'm a tech enthusiast. I enjoy learning\n                        new tech then building something from what I've learned.</p>\n\n                        <p>Recently I've been learning more about web technologies, specifically React <em>since I was just\n                        an Angular user until I saw the light.</em> Plus WebAssembly which has led me to learn Rust.</p>\n\n                        <p>My other hobbies include keeping up with European Soccer and watching my favorite\n                        team, Arsenal(!). Or playing with my dogs (<em>yes, plural</em>), I have 3, a beagle named Snoopy, and \n                        two half-terrier-half-dobbermans named Milly and Molly.</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AboutMe;","import React from 'react';\n\nclass Experience extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"row \">\n                    <div class=\"col\" text-center>\n                        <h4>BlueCross BlueShield of Western NY</h4>\n                        <h5><em>Application Developer Intern (May 2019 - August 2019)</em></h5>\n                        <h6><em>Buffalo, NY</em></h6>\n                        <br></br>\n                        <p>\n                            BCBS is a health insurance company and was my first experience in using tech in industry.\n                            While there I created a full-stack application, specifically a Dashboard the the claims department\n                            could use to view the processing of claims going through the system. This would identify things such\n                            as if there is an error with the batching programs and to alert the claims department\n                            if there is a problem with claims being processed or that may require manual processing.\n                        </p>\n                    </div>\n                    <div class=\"col\">\n                        <img src=\"images/bcbs.jpeg\" width=\"150\" height=\"150\"></img>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Experience;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nimport Home from './Home/Home.js';\nimport Projects from './Projects/Projects.js';\nimport Resume from './Resume/Resume.js';\nimport AboutMe from './AboutMe/AboutMe.js';\nimport Experience from './Experience/Experience.js'\n\nconst image = \"logo192.png\";\n\n// This is just a navigator, similar to how there is routing on Angular. Just a note for myself.\nfunction App() {\n  return (\n    <div>\n        \n        <Router>\n            <div>\n            {/* bg-light implies light nav, dark text*/}\n                <nav id=\"nav-bg\" class=\"navbar navbar-expand-md sticky-top\">\n                            <Link to=\"/\" class=\"nav-link\">\n                                <img class=\"img-space\" src=\"images/home.png\" width=\"20\" height=\"20\"/>HOME\n                            </Link>\n                            <Link to=\"/projects\" class=\"nav-link\">\n                                <img class=\"img-space\" src=\"images/project.png\" width=\"20\" height=\"20\"/>PROJECTS\n                                \n                            </Link>\n                            <Link to=\"/experience\" class=\"nav-link\">\n                                <img src=\"images/work-station.png\" width=\"20\" height=\"20\"/> EXPERIENCE\n                                </Link>\n                            <Link to=\"/resume\" class=\"nav-link\">\n                                <img src=\"images/resume.png\" width=\"20\" height=\"20\"/> RESUME</Link>\n                            <Link to=\"/about_me\" class=\"nav-link\">\n                                <img src=\"images/soccer-ball(2).png\" width=\"20\" height=\"20\"/> ABOUT ME</Link>\n                </nav>\n\n                <Switch>\n                    <Route path=\"/projects\">\n                        <Projects></Projects>\n                    </Route>\n                    <Route path=\"/resume\">\n                        <Resume></Resume>\n                    </Route>\n                    <Route path=\"/experience\">\n                        <Experience></Experience>\n                    </Route>\n                    <Route path=\"/about_me\">\n                        <AboutMe></AboutMe>\n                    </Route>\n                    <Route path=\"/\">\n                        <Home></Home>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}